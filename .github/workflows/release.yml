name: Release
on:
  push:
    tags:
      - "v*"
env:
  CARGO_TERM_COLOR: always
jobs:
  macos-build:
    name: MacOS build
    runs-on: macos-14
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: "true"
      - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1
        with:
          target: x86_64-apple-darwin
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build ARM
        run: cargo build --release --target aarch64-apple-darwin --verbose
      - name: Build Intel
        run: cargo build --release --target x86_64-apple-darwin --verbose
      - name: Prepare artifact
        run: |
          mkdir artifacts
          cp target/aarch64-apple-darwin/release/ext-proc-load-tester artifacts/ext-proc-load-tester-aarch64-apple-darwin
          cp target/x86_64-apple-darwin/release/ext-proc-load-tester artifacts/ext-proc-load-tester-x86_64-apple-darwin
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: macos-build-artifacts
          path: artifacts/*
  linux-build:
    name: Linux build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: "true"
      - uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48 # v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Intel
        run: cargo build --release --target x86_64-unknown-linux-gnu --verbose
      - name: Prepare artifact
        run: |
          mkdir artifacts
          cp target/x86_64-unknown-linux-gnu/release/ext-proc-load-tester artifacts/ext-proc-load-tester-x86_64-unknown-linux-gnu
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: linux-build-artifacts
          path: artifacts/*

  release:
    name: Create GitHub Release
    needs:
     - macos-build
     - linux-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: macos-build-artifacts
          path: ./macos-artifacts

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: linux-build-artifacts
          path: ./linux-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            macos-artifacts/ext-proc-load-tester-aarch64-apple-darwin
            macos-artifacts/ext-proc-load-tester-x86_64-apple-darwin
            linux-artifacts/ext-proc-load-tester-x86_64-unknown-linux-gnu
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/bonnetn/ext-proc-load-tester
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.25.0
          driver-opts: image=moby/buildkit:v0.23.2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
