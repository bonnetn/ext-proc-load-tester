name: Release
on:
  push:
    tags:
      - "v*"
env:
  CARGO_TERM_COLOR: always
jobs:
  build-release:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Install dependencies for cross-compilation
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir artifacts
          BIN_NAME=mycli # <-- Replace with your CLI name
          cp target/${{ matrix.target }}/release/$BIN_NAME artifacts/$BIN_NAME-${{ matrix.target }}
          # Add .exe for Windows
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-gnu" ]; then
            mv artifacts/$BIN_NAME-${{ matrix.target }} artifacts/$BIN_NAME-${{ matrix.target }}.exe
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: artifacts/*

  release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
